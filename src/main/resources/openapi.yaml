openapi: 3.0.1
info:
  title: Application API
  description: Description about Dev Blog
  contact:
    name: Dmitriy Bogdanov
    email: diman5178@gmail.com
  version: v1
externalDocs:
  description: Dev Blog repository
  url: https://github.com/Dimaspb24/DevBlog
servers:
  - url: http://localhost:8080
    description: Local service
tags:
  - name: Actuator
    description: Monitor and interact
    externalDocs:
      description: Spring Boot Actuator Web API Documentation
      url: https://docs.spring.io/spring-boot/docs/current/actuator-api/html/
paths:
  /v1/users/{userId}:
    get:
      tags:
        - user-controller
      operationId: get
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponse'
    put:
      tags:
        - user-controller
      operationId: update
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      tags:
        - user-controller
      operationId: delete
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
  /v1/users/{userId}/articles/{articleId}:
    get:
      tags:
        - article-controller
      operationId: get_1
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OpenArticleResponse'
      security:
        - security_auth: [ ]
    put:
      tags:
        - article-controller
      operationId: update_1
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OpenArticleResponse'
      security:
        - security_auth: [ ]
    delete:
      tags:
        - article-controller
      operationId: delete_2
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
      security:
        - security_auth: [ ]
  /v1/users/{userId}/articles/{articleId}/ratings:
    get:
      tags:
        - rating-controller
      operationId: get_2
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RatingResponse'
    put:
      tags:
        - rating-controller
      operationId: update_2
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingRequest'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RatingResponse'
    post:
      tags:
        - rating-controller
      operationId: create_1
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingRequest'
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RatingResponse'
  /v1/users/{userId}/articles/{articleId}/comments/{commentId}:
    get:
      tags:
        - comment-controller
      operationId: get_3
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommentResponse'
    put:
      tags:
        - comment-controller
      operationId: update_3
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommentResponse'
    delete:
      tags:
        - comment-controller
      operationId: delete_3
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
  /v1/users/{userId}/subscriptions/{authorId}:
    post:
      tags:
        - subscription-controller
      operationId: subscribe
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: authorId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
        - subscription-controller
      operationId: unsubscribe
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: authorId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
  /v1/users/{userId}/articles:
    get:
      tags:
        - article-controller
      operationId: getAll_2
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCloseArticleResponse'
      security:
        - security_auth: [ ]
    post:
      tags:
        - article-controller
      operationId: create
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OpenArticleResponse'
      security:
        - security_auth: [ ]
  /v1/users/{userId}/articles/{articleId}/comments:
    get:
      tags:
        - comment-controller
      operationId: getAll_3
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCommentResponse'
    post:
      tags:
        - comment-controller
      operationId: create_2
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommentResponse'
  /v1/users/{userId}/articles/{articleId}/bookmarks:
    post:
      tags:
        - bookmark-controller
      operationId: create_3
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookmarkRequest'
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookmarkResponse'
  /v1/tags:
    get:
      tags:
        - tag-controller
      operationId: getAll_4
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagResponse'
    post:
      tags:
        - tag-controller
      operationId: create_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagResponse'
  /v1/registration:
    post:
      tags:
        - registration-controller
      operationId: registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
  /v1/checkToken:
    post:
      tags:
        - jwks-controller
      operationId: checkValidateToken
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /v1/auth/logout:
    post:
      tags:
        - authentication-controller
      operationId: logout
      responses:
        "200":
          description: OK
  /v1/auth/login:
    post:
      tags:
        - authentication-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /v1/users:
    get:
      tags:
        - user-controller
      operationId: getAll
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageUserResponse'
  /v1/users/{userId}/subscriptions:
    get:
      tags:
        - subscription-controller
      operationId: getSubsriptions
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageSubscriptionResponse'
  /v1/users/{userId}/subscribers:
    get:
      tags:
        - subscription-controller
      operationId: getSubscribers
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageSubscriptionResponse'
  /v1/users/{userId}/bookmarks/{bookmarkType}:
    get:
      tags:
        - bookmark-controller
      operationId: getAll_1
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: bookmarkType
          in: path
          required: true
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBookmarkArticleResponse'
  /v1/users/{userId}/articlesBySubscriptions:
    get:
      tags:
        - article-controller
      operationId: findArticlesBySubscriptions
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCloseArticleResponse'
      security:
        - security_auth: [ ]
  /v1/topic/articles:
    get:
      tags:
        - article-sorting-controller
      operationId: sorting
      parameters:
        - name: sortingParam
          in: query
          required: true
          schema:
            type: string
            enum:
              - PUBLICATION_DATE
              - RATING
        - name: sortOrder
          in: query
          required: true
          schema:
            type: string
            enum:
              - ASCENDING
              - DESCENDING
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCloseArticleResponse'
  /v1/tags/{tagId}:
    get:
      tags:
        - tag-controller
      operationId: get_4
      parameters:
        - name: tagId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagResponse'
    delete:
      tags:
        - tag-controller
      operationId: delete_4
      parameters:
        - name: tagId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
  /v1/searches/tags:
    get:
      tags:
        - tag-searches-controller
      operationId: getByName
      parameters:
        - name: nameContains
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagResponse'
  /v1/searches/articles:
    get:
      tags:
        - article-searches-controller
      operationId: getByTitleName
      parameters:
        - name: titleContains
          in: query
          required: true
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCloseArticleResponse'
  /v1/searches/articlesByTag:
    get:
      tags:
        - article-searches-controller
      operationId: findArticlesByTagName
      parameters:
        - name: tag
          in: query
          required: true
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCloseArticleResponse'
  /v1/users/{userId}/bookmarks/{bookmarkId}:
    delete:
      tags:
        - bookmark-controller
      operationId: delete_1
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: bookmarkId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
          content:
            '*/*':
              schema:
                type: object
  /actuator:
    get:
      tags:
        - Actuator
      summary: Actuator root web endpoint
      operationId: links
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
  /actuator/health:
    get:
      tags:
        - Actuator
      summary: Actuator web endpoint 'health'
      operationId: health
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /actuator/health/**:
    get:
      tags:
        - Actuator
      summary: Actuator web endpoint 'health-path'
      operationId: health-path
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    UserRequest:
      type: object
      properties:
        phone:
          pattern: "^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$"
          type: string
        firstname:
          type: string
        lastname:
          type: string
        nickname:
          type: string
        info:
          type: string
    PersonalInfo:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        nickname:
          type: string
        photo:
          type: string
        info:
          type: string
        phone:
          type: string
        enabled:
          type: boolean
    UserResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        login:
          type: string
        personalInfo:
          $ref: '#/components/schemas/PersonalInfo'
    ArticleRequest:
      required:
        - body
        - description
        - status
        - title
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        status:
          pattern: (PUBLISHED)|(CREATED)|(REMOVED)
          type: string
        description:
          type: string
        tags:
          maxItems: 4
          minItems: 0
          type: array
          items:
            type: string
    OpenArticleResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        body:
          type: string
        status:
          type: string
        description:
          type: string
        publicationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        authorId:
          type: integer
          format: int32
        nickname:
          type: string
        photo:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagResponse'
    TagResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    RatingRequest:
      required:
        - rating
      type: object
      properties:
        rating:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
    RatingResponse:
      type: object
      properties:
        authorId:
          type: integer
          format: int32
        articleId:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
    CommentRequest:
      required:
        - message
      type: object
      properties:
        message:
          type: string
        receiverId:
          type: integer
          format: int32
    CommentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        message:
          type: string
        authorId:
          type: integer
          format: int32
        receiverId:
          type: integer
          format: int32
        articleId:
          type: integer
          format: int32
    BookmarkRequest:
      required:
        - bookmarkType
      type: object
      properties:
        bookmarkType:
          pattern: (BOOKMARK)|(FAVORITE)
          type: string
    BookmarkResponse:
      type: object
      properties:
        userId:
          type: integer
          format: int32
        articleId:
          type: integer
          format: int32
        bookmarkType:
          type: string
    TagRequest:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 0
          type: string
    RegistrationRequest:
      required:
        - login
        - password
        - role
        - status
      type: object
      properties:
        login:
          type: string
        password:
          type: string
        role:
          pattern: (USER)|(ADMIN)
          type: string
        status:
          pattern: (ACTIVE)|(BANNED)
          type: string
    RegistrationResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        login:
          type: string
    AuthenticationRequest:
      required:
        - login
        - password
      type: object
      properties:
        login:
          type: string
        password:
          type: string
    AuthenticationResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        login:
          type: string
        token:
          type: string
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PageUserResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
        sort:
          $ref: '#/components/schemas/Sort'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        unpaged:
          type: boolean
        paged:
          type: boolean
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    PageSubscriptionResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionResponse'
        sort:
          $ref: '#/components/schemas/Sort'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    SubscriptionResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        firstname:
          type: string
        lastname:
          type: string
        nickname:
          type: string
    BookmarkArticleResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        articleResponse:
          $ref: '#/components/schemas/CloseArticleResponse'
    CloseArticleResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        status:
          type: string
        description:
          type: string
        publicationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        authorId:
          type: integer
          format: int32
        nickname:
          type: string
        photo:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagResponse'
    PageBookmarkArticleResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/BookmarkArticleResponse'
        sort:
          $ref: '#/components/schemas/Sort'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageCloseArticleResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/CloseArticleResponse'
        sort:
          $ref: '#/components/schemas/Sort'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    PageCommentResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/CommentResponse'
        sort:
          $ref: '#/components/schemas/Sort'
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        first:
          type: boolean
        last:
          type: boolean
        empty:
          type: boolean
    Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean

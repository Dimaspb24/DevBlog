openapi: 3.0.1
info:
  title: Application API
  description: Dev Blog application
  contact:
    name: API Support
    email: diman5178@gmail.com
  version: v1
externalDocs:
  description: Dev Blog repository
  url: https://github.com/Dimaspb24/DevBlog
servers:
  - url: http://localhost:8080
    description: Local service
security:
  - bearerAuth: [ ]
tags:
  - name: Actuator
    description: Monitor and interact
    externalDocs:
      description: Spring Boot Actuator Web API Documentation
      url: https://docs.spring.io/spring-boot/docs/current/actuator-api/html/
paths:
  /v1/users/{userId}:
    get:
      tags:
        - user-controller
      operationId: get
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponse'
    put:
      tags:
        - user-controller
      operationId: update
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/UserResponse'
    delete:
      tags:
        - user-controller
      operationId: delete
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
  /v1/users/{userId}/articles/{articleId}:
    get:
      tags:
        - article-controller
      operationId: get_1
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OpenArticleResponse'
    put:
      tags:
        - article-controller
      operationId: update_1
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OpenArticleResponse'
    delete:
      tags:
        - article-controller
      operationId: delete_2
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
    patch:
      tags:
        - article-controller
      operationId: enable
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: enabled
          in: query
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: OK
  /v1/users/{userId}/articles/{articleId}/ratings:
    get:
      tags:
        - rating-controller
      operationId: get_2
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RatingResponse'
    put:
      tags:
        - rating-controller
      operationId: update_2
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingRequest'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RatingResponse'
    post:
      tags:
        - rating-controller
      operationId: create_1
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RatingRequest'
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RatingResponse'
  /v1/users/{userId}/articles/{articleId}/comments/{commentId}:
    get:
      tags:
        - comment-controller
      operationId: get_3
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommentResponse'
    put:
      tags:
        - comment-controller
      operationId: update_3
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommentResponse'
    delete:
      tags:
        - comment-controller
      operationId: delete_3
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
    patch:
      tags:
        - comment-controller
      operationId: enable_1
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: commentId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: enabled
          in: query
          required: true
          schema:
            type: boolean
      responses:
        "200":
          description: OK
  /v1/users/{userId}/subscriptions/{authorId}:
    post:
      tags:
        - subscription-controller
      operationId: subscribe
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: authorId
          in: path
          required: true
          schema:
            type: string
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                type: object
    delete:
      tags:
        - subscription-controller
      operationId: unsubscribe
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: authorId
          in: path
          required: true
          schema:
            type: string
      responses:
        "204":
          description: No Content
  /v1/users/{userId}/articles:
    get:
      tags:
        - article-controller
      operationId: getAll_2
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCloseArticleResponse'
    post:
      tags:
        - article-controller
      operationId: create
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArticleRequest'
        required: true
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/OpenArticleResponse'
  /v1/users/{userId}/articles/{articleId}/comments:
    get:
      tags:
        - comment-controller
      operationId: getAll_3
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCommentResponse'
    post:
      tags:
        - comment-controller
      operationId: create_2
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CommentRequest'
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/CommentResponse'
  /v1/users/{userId}/articles/{articleId}/bookmarks:
    post:
      tags:
        - bookmark-controller
      operationId: create_3
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: articleId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BookmarkRequest'
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/BookmarkResponse'
  /v1/tags:
    get:
      tags:
        - tag-controller
      operationId: getAll_4
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagResponse'
    post:
      tags:
        - tag-controller
      operationId: create_4
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TagRequest'
      responses:
        "201":
          description: Created
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagResponse'
  /v1/registration:
    post:
      tags:
        - registration-controller
      operationId: registration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RegistrationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RegistrationResponse'
  /v1/checkToken:
    post:
      tags:
        - jwks-controller
      operationId: checkValidateToken
      parameters:
        - name: token
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: string
  /v1/auth/logout:
    post:
      tags:
        - authentication-controller
      operationId: logout
      responses:
        "200":
          description: OK
  /v1/auth/login:
    post:
      tags:
        - authentication-controller
      operationId: login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AuthenticationRequest'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AuthenticationResponse'
  /v1/users:
    get:
      tags:
        - user-controller
      operationId: getAll
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageUserResponse'
  /v1/users/{userId}/verify:
    get:
      tags:
        - verification-controller
      operationId: verifyUser
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: code
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ModelAndView'
  /v1/users/{userId}/subscriptions:
    get:
      tags:
        - subscription-controller
      operationId: getSubscriptions
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageSubscriptionResponse'
  /v1/users/{userId}/subscribers:
    get:
      tags:
        - subscription-controller
      operationId: getSubscribers
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageSubscriptionResponse'
  /v1/users/{userId}/bookmarks/{bookmarkType}:
    get:
      tags:
        - bookmark-controller
      operationId: getAll_1
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: bookmarkType
          in: path
          required: true
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageBookmarkArticleResponse'
  /v1/users/{userId}/articlesBySubscriptions:
    get:
      tags:
        - article-controller
      operationId: findArticlesBySubscriptions
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCloseArticleResponse'
  /v1/topic/articles:
    get:
      tags:
        - article-sorting-controller
      operationId: sorting
      parameters:
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCloseArticleResponse'
  /v1/tags/{tagId}:
    get:
      tags:
        - tag-controller
      operationId: get_4
      parameters:
        - name: tagId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/TagResponse'
    delete:
      tags:
        - tag-controller
      operationId: delete_4
      parameters:
        - name: tagId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        "204":
          description: No Content
  /v1/searches/tags:
    get:
      tags:
        - tag-searches-controller
      operationId: getByName
      parameters:
        - name: nameContains
          in: query
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TagResponse'
  /v1/searches/articles:
    get:
      tags:
        - article-searches-controller
      operationId: getByTitleName
      parameters:
        - name: titleContains
          in: query
          required: true
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCloseArticleResponse'
  /v1/searches/articlesByTag:
    get:
      tags:
        - article-searches-controller
      operationId: findArticlesByTagName
      parameters:
        - name: tag
          in: query
          required: true
          schema:
            type: string
        - name: pageable
          in: query
          required: true
          schema:
            $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PageCloseArticleResponse'
  /:
    get:
      tags:
        - google-auth-controller
      operationId: login_1
      responses:
        "308":
          description: Permanent Redirect
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/RedirectView'
  /v1/users/{userId}/bookmarks/{bookmarkId}:
    delete:
      tags:
        - bookmark-controller
      operationId: delete_1
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: string
        - name: bookmarkId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        "204":
          description: No Content
          content:
            '*/*':
              schema:
                type: object
  /actuator:
    get:
      tags:
        - Actuator
      summary: Actuator root web endpoint
      operationId: links
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
                additionalProperties:
                  type: object
                  additionalProperties:
                    $ref: '#/components/schemas/Link'
  /actuator/health:
    get:
      tags:
        - Actuator
      summary: Actuator web endpoint 'health'
      operationId: health
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
  /actuator/health/**:
    get:
      tags:
        - Actuator
      summary: Actuator web endpoint 'health-path'
      operationId: health-path
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                type: object
components:
  schemas:
    UserRequest:
      type: object
      properties:
        phone:
          pattern: "^((8|\\+7)[\\- ]?)?(\\(?\\d{3}\\)?[\\- ]?)?[\\d\\- ]{7,10}$"
          type: string
        firstname:
          type: string
        lastname:
          type: string
        nickname:
          type: string
        info:
          type: string
    PersonalInfo:
      type: object
      properties:
        firstname:
          type: string
        lastname:
          type: string
        nickname:
          type: string
        photo:
          type: string
        info:
          type: string
        phone:
          type: string
    UserResponse:
      type: object
      properties:
        id:
          type: string
        login:
          type: string
        personalInfo:
          $ref: '#/components/schemas/PersonalInfo'
    ArticleRequest:
      required:
        - body
        - description
        - status
        - title
      type: object
      properties:
        title:
          type: string
        body:
          type: string
        status:
          pattern: (PUBLISHED)|(CREATED)
          type: string
        description:
          type: string
        tags:
          maxItems: 4
          minItems: 0
          type: array
          items:
            type: string
    OpenArticleResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        body:
          type: string
        status:
          type: string
        description:
          type: string
        publicationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        authorId:
          type: string
        nickname:
          type: string
        photo:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagResponse'
    TagResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
    RatingRequest:
      required:
        - rating
      type: object
      properties:
        rating:
          maximum: 10
          minimum: 0
          type: integer
          format: int32
    RatingResponse:
      type: object
      properties:
        authorId:
          type: string
        articleId:
          type: integer
          format: int32
        rating:
          type: integer
          format: int32
    CommentRequest:
      required:
        - message
      type: object
      properties:
        message:
          type: string
        receiverId:
          type: string
    CommentResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        message:
          type: string
        authorId:
          type: string
        receiverId:
          type: string
        articleId:
          type: integer
          format: int32
    BookmarkRequest:
      required:
        - bookmarkType
      type: object
      properties:
        bookmarkType:
          pattern: (BOOKMARK)|(FAVORITE)
          type: string
    BookmarkResponse:
      type: object
      properties:
        userId:
          type: string
        articleId:
          type: integer
          format: int32
        bookmarkType:
          type: string
    TagRequest:
      required:
        - name
      type: object
      properties:
        name:
          maxLength: 50
          minLength: 0
          type: string
    RegistrationRequest:
      required:
        - login
        - password
      type: object
      properties:
        login:
          type: string
        password:
          type: string
    RegistrationResponse:
      type: object
      properties:
        id:
          type: string
        login:
          type: string
    AuthenticationRequest:
      required:
        - login
        - password
      type: object
      properties:
        login:
          pattern: .+@.+\..+
          type: string
        password:
          type: string
    AuthenticationResponse:
      type: object
      properties:
        id:
          type: string
        login:
          type: string
        token:
          type: string
    Pageable:
      type: object
      properties:
        page:
          minimum: 0
          type: integer
          format: int32
        size:
          minimum: 1
          type: integer
          format: int32
        sort:
          type: array
          items:
            type: string
    PageUserResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/UserResponse'
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageableObject:
      type: object
      properties:
        offset:
          type: integer
          format: int64
        sort:
          $ref: '#/components/schemas/Sort'
        pageSize:
          type: integer
          format: int32
        pageNumber:
          type: integer
          format: int32
        paged:
          type: boolean
        unpaged:
          type: boolean
    Sort:
      type: object
      properties:
        empty:
          type: boolean
        sorted:
          type: boolean
        unsorted:
          type: boolean
    ModelAndView:
      type: object
      properties:
        view:
          $ref: '#/components/schemas/View'
        model:
          type: object
          additionalProperties:
            type: object
        status:
          type: string
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        empty:
          type: boolean
        viewName:
          type: string
        modelMap:
          type: object
          properties:
            empty:
              type: boolean
          additionalProperties:
            type: object
        reference:
          type: boolean
    View:
      type: object
      properties:
        contentType:
          type: string
    PageSubscriptionResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/SubscriptionResponse'
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    SubscriptionResponse:
      type: object
      properties:
        id:
          type: string
        firstname:
          type: string
        lastname:
          type: string
        nickname:
          type: string
    BookmarkArticleResponse:
      type: object
      properties:
        id:
          type: integer
          format: int64
        articleResponse:
          $ref: '#/components/schemas/CloseArticleResponse'
    CloseArticleResponse:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
        status:
          type: string
        description:
          type: string
        publicationDate:
          type: string
          format: date-time
        modificationDate:
          type: string
          format: date-time
        authorId:
          type: string
        nickname:
          type: string
        photo:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/TagResponse'
    PageBookmarkArticleResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/BookmarkArticleResponse'
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageCloseArticleResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/CloseArticleResponse'
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    PageCommentResponse:
      type: object
      properties:
        totalPages:
          type: integer
          format: int32
        totalElements:
          type: integer
          format: int64
        number:
          type: integer
          format: int32
        size:
          type: integer
          format: int32
        content:
          type: array
          items:
            $ref: '#/components/schemas/CommentResponse'
        sort:
          $ref: '#/components/schemas/Sort'
        first:
          type: boolean
        last:
          type: boolean
        numberOfElements:
          type: integer
          format: int32
        pageable:
          $ref: '#/components/schemas/PageableObject'
        empty:
          type: boolean
    ApplicationContext:
      type: object
      properties:
        parent:
          $ref: '#/components/schemas/ApplicationContext'
        id:
          type: string
        displayName:
          type: string
        autowireCapableBeanFactory:
          $ref: '#/components/schemas/AutowireCapableBeanFactory'
        applicationName:
          type: string
        startupDate:
          type: integer
          format: int64
        environment:
          $ref: '#/components/schemas/Environment'
        beanDefinitionNames:
          type: array
          items:
            type: string
        beanDefinitionCount:
          type: integer
          format: int32
        parentBeanFactory:
          $ref: '#/components/schemas/BeanFactory'
        classLoader:
          type: object
          properties:
            parent:
              type: object
              properties:
                name:
                  type: string
                unnamedModule:
                  type: object
                  properties:
                    layer:
                      type: object
                    name:
                      type: string
                    descriptor:
                      type: object
                      properties:
                        open:
                          type: boolean
                        automatic:
                          type: boolean
                    classLoader:
                      type: object
                      properties:
                        name:
                          type: string
                        defaultAssertionStatus:
                          type: boolean
                          writeOnly: true
                        registeredAsParallelCapable:
                          type: boolean
                        definedPackages:
                          type: array
                          items:
                            type: object
                            properties:
                              name:
                                type: string
                              annotations:
                                type: array
                                items:
                                  type: object
                              declaredAnnotations:
                                type: array
                                items:
                                  type: object
                              sealed:
                                type: boolean
                              specificationVersion:
                                type: string
                              specificationVendor:
                                type: string
                              implementationVersion:
                                type: string
                              implementationVendor:
                                type: string
                              specificationTitle:
                                type: string
                              implementationTitle:
                                type: string
                    annotations:
                      type: array
                      items:
                        type: object
                    declaredAnnotations:
                      type: array
                      items:
                        type: object
                    named:
                      type: boolean
                    packages:
                      uniqueItems: true
                      type: array
                      items:
                        type: string
                defaultAssertionStatus:
                  type: boolean
                  writeOnly: true
                registeredAsParallelCapable:
                  type: boolean
                definedPackages:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      annotations:
                        type: array
                        items:
                          type: object
                      declaredAnnotations:
                        type: array
                        items:
                          type: object
                      sealed:
                        type: boolean
                      specificationVersion:
                        type: string
                      specificationVendor:
                        type: string
                      implementationVersion:
                        type: string
                      implementationVendor:
                        type: string
                      specificationTitle:
                        type: string
                      implementationTitle:
                        type: string
            name:
              type: string
            unnamedModule:
              type: object
              properties:
                layer:
                  type: object
                name:
                  type: string
                descriptor:
                  type: object
                  properties:
                    open:
                      type: boolean
                    automatic:
                      type: boolean
                classLoader:
                  type: object
                  properties:
                    name:
                      type: string
                    defaultAssertionStatus:
                      type: boolean
                      writeOnly: true
                    registeredAsParallelCapable:
                      type: boolean
                    definedPackages:
                      type: array
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                          annotations:
                            type: array
                            items:
                              type: object
                          declaredAnnotations:
                            type: array
                            items:
                              type: object
                          sealed:
                            type: boolean
                          specificationVersion:
                            type: string
                          specificationVendor:
                            type: string
                          implementationVersion:
                            type: string
                          implementationVendor:
                            type: string
                          specificationTitle:
                            type: string
                          implementationTitle:
                            type: string
                annotations:
                  type: array
                  items:
                    type: object
                declaredAnnotations:
                  type: array
                  items:
                    type: object
                named:
                  type: boolean
                packages:
                  uniqueItems: true
                  type: array
                  items:
                    type: string
            defaultAssertionStatus:
              type: boolean
              writeOnly: true
            registeredAsParallelCapable:
              type: boolean
            definedPackages:
              type: array
              items:
                type: object
                properties:
                  name:
                    type: string
                  annotations:
                    type: array
                    items:
                      type: object
                  declaredAnnotations:
                    type: array
                    items:
                      type: object
                  sealed:
                    type: boolean
                  specificationVersion:
                    type: string
                  specificationVendor:
                    type: string
                  implementationVersion:
                    type: string
                  implementationVendor:
                    type: string
                  specificationTitle:
                    type: string
                  implementationTitle:
                    type: string
    AutowireCapableBeanFactory:
      type: object
    BeanFactory:
      type: object
    Environment:
      type: object
      properties:
        defaultProfiles:
          type: array
          items:
            type: string
        activeProfiles:
          type: array
          items:
            type: string
    RedirectView:
      type: object
      properties:
        applicationContext:
          $ref: '#/components/schemas/ApplicationContext'
        servletContext:
          type: object
          properties:
            classLoader:
              type: object
              properties:
                name:
                  type: string
                defaultAssertionStatus:
                  type: boolean
                  writeOnly: true
                registeredAsParallelCapable:
                  type: boolean
                definedPackages:
                  type: array
                  items:
                    type: object
                    properties:
                      name:
                        type: string
                      annotations:
                        type: array
                        items:
                          type: object
                      declaredAnnotations:
                        type: array
                        items:
                          type: object
                      sealed:
                        type: boolean
                      specificationVersion:
                        type: string
                      specificationVendor:
                        type: string
                      implementationVersion:
                        type: string
                      implementationVendor:
                        type: string
                      specificationTitle:
                        type: string
                      implementationTitle:
                        type: string
            majorVersion:
              type: integer
              format: int32
            minorVersion:
              type: integer
              format: int32
            contextPath:
              type: string
            servlets:
              type: object
              deprecated: true
            servletNames:
              type: object
              deprecated: true
            serverInfo:
              type: string
            attributeNames:
              type: object
            sessionTimeout:
              type: integer
              format: int32
            servletRegistrations:
              type: object
              additionalProperties:
                type: object
                properties:
                  mappings:
                    type: array
                    items:
                      type: string
                  runAsRole:
                    type: string
                  name:
                    type: string
                  className:
                    type: string
                  initParameters:
                    type: object
                    additionalProperties:
                      type: string
            servletContextName:
              type: string
            effectiveMinorVersion:
              type: integer
              format: int32
            sessionTrackingModes:
              uniqueItems: true
              type: array
              writeOnly: true
              items:
                type: string
                enum:
                  - COOKIE
                  - URL
                  - SSL
            effectiveMajorVersion:
              type: integer
              format: int32
            sessionCookieConfig:
              type: object
              properties:
                name:
                  type: string
                path:
                  type: string
                maxAge:
                  type: integer
                  format: int32
                domain:
                  type: string
                comment:
                  type: string
                secure:
                  type: boolean
                httpOnly:
                  type: boolean
            initParameterNames:
              type: object
            effectiveSessionTrackingModes:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                  - COOKIE
                  - URL
                  - SSL
            defaultSessionTrackingModes:
              uniqueItems: true
              type: array
              items:
                type: string
                enum:
                  - COOKIE
                  - URL
                  - SSL
            filterRegistrations:
              type: object
              additionalProperties:
                type: object
                properties:
                  urlPatternMappings:
                    type: array
                    items:
                      type: string
                  servletNameMappings:
                    type: array
                    items:
                      type: string
                  name:
                    type: string
                  className:
                    type: string
                  initParameters:
                    type: object
                    additionalProperties:
                      type: string
            virtualServerName:
              type: string
            requestCharacterEncoding:
              type: string
            responseCharacterEncoding:
              type: string
            jspConfigDescriptor:
              type: object
              properties:
                jspPropertyGroups:
                  type: array
                  items:
                    type: object
                    properties:
                      buffer:
                        type: string
                      defaultContentType:
                        type: string
                      urlPatterns:
                        type: array
                        items:
                          type: string
                      includePreludes:
                        type: array
                        items:
                          type: string
                      pageEncoding:
                        type: string
                      elIgnored:
                        type: string
                      isXml:
                        type: string
                      includeCodas:
                        type: array
                        items:
                          type: string
                      errorOnUndeclaredNamespace:
                        type: string
                      deferredSyntaxAllowedAsLiteral:
                        type: string
                      trimDirectiveWhitespaces:
                        type: string
                      scriptingInvalid:
                        type: string
                taglibs:
                  type: array
                  items:
                    type: object
                    properties:
                      taglibLocation:
                        type: string
                      taglibURI:
                        type: string
          writeOnly: true
        contentType:
          type: string
        requestContextAttribute:
          type: string
        staticAttributes:
          type: object
          additionalProperties:
            type: object
        exposePathVariables:
          type: boolean
        exposeContextBeansAsAttributes:
          type: boolean
          writeOnly: true
        exposedContextBeanNames:
          type: array
          writeOnly: true
          items:
            type: string
        beanName:
          type: string
        url:
          type: string
        contextRelative:
          type: boolean
          writeOnly: true
        http10Compatible:
          type: boolean
          writeOnly: true
        exposeModelAttributes:
          type: boolean
          writeOnly: true
        encodingScheme:
          type: string
          writeOnly: true
        statusCode:
          type: string
          writeOnly: true
          enum:
            - 100 CONTINUE
            - 101 SWITCHING_PROTOCOLS
            - 102 PROCESSING
            - 103 CHECKPOINT
            - 200 OK
            - 201 CREATED
            - 202 ACCEPTED
            - 203 NON_AUTHORITATIVE_INFORMATION
            - 204 NO_CONTENT
            - 205 RESET_CONTENT
            - 206 PARTIAL_CONTENT
            - 207 MULTI_STATUS
            - 208 ALREADY_REPORTED
            - 226 IM_USED
            - 300 MULTIPLE_CHOICES
            - 301 MOVED_PERMANENTLY
            - 302 FOUND
            - 302 MOVED_TEMPORARILY
            - 303 SEE_OTHER
            - 304 NOT_MODIFIED
            - 305 USE_PROXY
            - 307 TEMPORARY_REDIRECT
            - 308 PERMANENT_REDIRECT
            - 400 BAD_REQUEST
            - 401 UNAUTHORIZED
            - 402 PAYMENT_REQUIRED
            - 403 FORBIDDEN
            - 404 NOT_FOUND
            - 405 METHOD_NOT_ALLOWED
            - 406 NOT_ACCEPTABLE
            - 407 PROXY_AUTHENTICATION_REQUIRED
            - 408 REQUEST_TIMEOUT
            - 409 CONFLICT
            - 410 GONE
            - 411 LENGTH_REQUIRED
            - 412 PRECONDITION_FAILED
            - 413 PAYLOAD_TOO_LARGE
            - 413 REQUEST_ENTITY_TOO_LARGE
            - 414 URI_TOO_LONG
            - 414 REQUEST_URI_TOO_LONG
            - 415 UNSUPPORTED_MEDIA_TYPE
            - 416 REQUESTED_RANGE_NOT_SATISFIABLE
            - 417 EXPECTATION_FAILED
            - 418 I_AM_A_TEAPOT
            - 419 INSUFFICIENT_SPACE_ON_RESOURCE
            - 420 METHOD_FAILURE
            - 421 DESTINATION_LOCKED
            - 422 UNPROCESSABLE_ENTITY
            - 423 LOCKED
            - 424 FAILED_DEPENDENCY
            - 425 TOO_EARLY
            - 426 UPGRADE_REQUIRED
            - 428 PRECONDITION_REQUIRED
            - 429 TOO_MANY_REQUESTS
            - 431 REQUEST_HEADER_FIELDS_TOO_LARGE
            - 451 UNAVAILABLE_FOR_LEGAL_REASONS
            - 500 INTERNAL_SERVER_ERROR
            - 501 NOT_IMPLEMENTED
            - 502 BAD_GATEWAY
            - 503 SERVICE_UNAVAILABLE
            - 504 GATEWAY_TIMEOUT
            - 505 HTTP_VERSION_NOT_SUPPORTED
            - 506 VARIANT_ALSO_NEGOTIATES
            - 507 INSUFFICIENT_STORAGE
            - 508 LOOP_DETECTED
            - 509 BANDWIDTH_LIMIT_EXCEEDED
            - 510 NOT_EXTENDED
            - 511 NETWORK_AUTHENTICATION_REQUIRED
        expandUriTemplateVariables:
          type: boolean
          writeOnly: true
        propagateQueryParams:
          type: boolean
          writeOnly: true
        hosts:
          type: array
          items:
            type: string
        redirectView:
          type: boolean
        propagateQueryProperties:
          type: boolean
        attributes:
          type: object
          additionalProperties:
            type: string
          writeOnly: true
        attributesMap:
          type: object
          additionalProperties:
            type: object
        attributesCSV:
          type: string
          writeOnly: true
    Link:
      type: object
      properties:
        href:
          type: string
        templated:
          type: boolean
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
